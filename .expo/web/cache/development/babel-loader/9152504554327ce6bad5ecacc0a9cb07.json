{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport * as Animatable from 'react-native-animatable';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Welcome() {\n  var navigation = useNavigation();\n\n  var _useState = useState(new Date(1598051730000)),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState('date'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mode = _useState4[0],\n      setMode = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      show = _useState6[0],\n      setShow = _useState6[1];\n\n  var onChange = function onChange(event, selectedDate) {\n    setDate(selectedDate);\n  };\n\n  var showDatepicker = function showDatepicker() {\n    setShow('true');\n  };\n\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  var showTimepicker = function showTimepicker() {\n    showMode('time');\n  };\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(Animatable.View, {\n      delay: 600,\n      animation: \"fadeInUp\",\n      style: styles.containerForm,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Consult\\xF3rio M\\xE9dico Doutor Est\\xE1quio de Castro Melo!\"\n      }), _jsx(Text, {\n        style: styles.text\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return navigation.navigate('SignIn');\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Acessar\"\n        })\n      }), _jsx(View, {\n        children: _jsx(Button, {\n          onPress: showDatepicker,\n          title: \"Escolha o Dia!\"\n        })\n      }), _jsx(View, {\n        children: _jsx(Button, {\n          onPress: showTimepicker,\n          title: \"Escolha da Data!\"\n        })\n      }), _jsxs(Text, {\n        children: [\"selected: \", date.toLocaleString()]\n      }), show && _jsx(DateTimePicker, {\n        testID: \"dateTimePicker\",\n        value: date,\n        mode: 'date',\n        is24Hour: true,\n        onChange: onChange\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 2,\n    backgroundColor: '#2824ba'\n  },\n  containerForm: {\n    flex: 1,\n    backgroundColor: '#FFF',\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 25,\n    paddingStart: '10%',\n    paddingEnd: '10%'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginTop: 28,\n    marginBottom: 12\n  },\n  text: {\n    color: '#a1a1a1'\n  },\n  button: {\n    position: 'absolute',\n    backgroundColor: '#2824ba',\n    borderRadius: 50,\n    paddingVertical: 8,\n    width: '60%',\n    alignSelf: 'center',\n    bottom: '15%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    fontSize: 18,\n    color: '#FFF',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/www/CyberBunker/src/pages/Clinics/Consu_Santa_Clara/index.js"],"names":["React","useState","DateTimePicker","Animatable","useNavigation","Welcome","navigation","Date","date","setDate","mode","setMode","show","setShow","onChange","event","selectedDate","showDatepicker","showMode","currentMode","showTimepicker","styles","container","containerForm","title","text","button","navigate","buttonText","toLocaleString","StyleSheet","create","flex","backgroundColor","borderTopLeftRadius","borderTopRightRadius","paddingStart","paddingEnd","fontSize","fontWeight","marginTop","marginBottom","color","position","borderRadius","paddingVertical","width","alignSelf","bottom","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    Image,\r\n    TouchableOpacity,\r\n    Button,\r\n    Platform\r\n} from 'react-native';\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\n\r\nimport * as Animatable from 'react-native-animatable'\r\n\r\nimport { useNavigation } from '@react-navigation/native'\r\n\r\nexport default function Welcome() {\r\n    const navigation = useNavigation();\r\n\r\n    const [date, setDate] = useState(new Date(1598051730000));\r\n    const [mode, setMode] = useState('date');\r\n    const [show, setShow] = useState(false);\r\n    const onChange = (event, selectedDate) => {\r\n        setDate(selectedDate);\r\n    };\r\n    const showDatepicker = () => {\r\n        setShow('true');\r\n\r\n    };\r\n    const showMode = (currentMode) => {\r\n        setShow(true);\r\n        setMode(currentMode);\r\n      };\r\n    const showTimepicker = () => {\r\n        showMode('time');\r\n      };\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n\r\n\r\n\r\n\r\n\r\n            <Animatable.View delay={600} animation=\"fadeInUp\" style={styles.containerForm}>\r\n                <Text style={styles.title}>Consultório Médico Doutor Estáquio de Castro Melo!</Text>\r\n                <Text style={styles.text}></Text>\r\n\r\n                <TouchableOpacity\r\n                    style={styles.button}\r\n                    onPress={() => navigation.navigate('SignIn')}\r\n                >\r\n                    <Text style={styles.buttonText} >Acessar</Text>\r\n                </TouchableOpacity>\r\n\r\n\r\n                <View>\r\n                <Button onPress={showDatepicker} title=\"Escolha o Dia!\" />\r\n            </View>\r\n            <View>\r\n        <Button onPress={showTimepicker} title=\"Escolha da Data!\" />\r\n      </View>\r\n\r\n            <Text>selected: {date.toLocaleString()}</Text>\r\n            {show && (\r\n                <DateTimePicker\r\n                    testID=\"dateTimePicker\"\r\n                    value={date}\r\n                    mode={'date'}\r\n                    is24Hour={true}\r\n                    onChange={onChange}\r\n                />\r\n            )}\r\n\r\n            </Animatable.View>\r\n\r\n            \r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 2,\r\n        backgroundColor: '#2824ba'\r\n    },\r\n \r\n    containerForm: {\r\n        flex: 1,\r\n        backgroundColor: '#FFF',\r\n        borderTopLeftRadius: 10,\r\n        borderTopRightRadius: 25,\r\n        paddingStart: '10%',\r\n        paddingEnd: '10%'\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        marginTop: 28,\r\n        marginBottom: 12,\r\n    },\r\n    text: {\r\n        color: '#a1a1a1'\r\n    },\r\n    button: {\r\n        position: 'absolute',\r\n        backgroundColor: '#2824ba',\r\n        borderRadius: 50,\r\n        paddingVertical: 8,\r\n        width: '60%',\r\n        alignSelf: 'center',\r\n        bottom: '15%',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    buttonText: {\r\n        fontSize: 18,\r\n        color: '#FFF',\r\n        fontWeight: 'bold'\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}